#[derive(Clone, Copy)]
pub enum Opcodes {
    CHGSTAT,
    HLT,
    EXX,
    EXF,
    EI,
    DI,
    NOP,
    ALURR,
    ADD,
    SUB,
    AND,
    OR,
    XOR,
    CMP,
    LSL,
    LSR,
    ADC,
    SBC,
    TEST,
    ASR,
    VADD,
    VSUB,
    VLSL,
    VLSR,
    ALURI,
    IADD,
    ISUB,
    IAND,
    IOR,
    IXOR,
    ICMP,
    ILSL,
    ILSR,
    LOADBO,
    LOADPRE,
    LOADPOST,
    IN,
    STOREBO,
    STOREPRE,
    STOREPOST,
    OUT,
    MOVL,
    MOVH,
    MOV,
    INT,
    JMP,
    JMPR,
    CALL,
    CALLR,
    RET,
    JCC,
    ERROR,
}

pub struct Instruction {
    // Generated in Fetch:
    pub insnbits: u16,

    // Generated in Decode:
    pub opcode: Opcodes,
    pub val_a: u16,
    pub val_b: u16,
    pub alu_op: super::alu::AluOp,
    pub mem_writeval: u16,
    pub dst1: usize,
    pub dst2: usize,
    pub next_pc: u16,
    pub control_sigs: super::ctrl_sigs::ctrl_sigs,

    // Generated in Execute:
    pub ex_result: u16,
    pub cond_holds: bool,

    // Generated in Memory:
    pub mem_readval: u16,
}

pub fn build_insn() -> Instruction {
    Instruction {
        insnbits: 0,
        opcode: Opcodes::ERROR,
        val_a: 0,
        val_b: 0,
        alu_op: super::alu::AluOp::OpNop,
        mem_writeval: 0,
        dst1: 0,
        dst2: 0,
        next_pc: 0,
        control_sigs: Default::default(),
        ex_result: 0,
        cond_holds: false,
        mem_readval: 0,
    }
}

pub static ALU_RR_LOOKUP: [Opcodes; 16] = [
    Opcodes::ADD,
    Opcodes::SUB,
    Opcodes::AND,
    Opcodes::OR,
    Opcodes::XOR,
    Opcodes::CMP,
    Opcodes::LSL,
    Opcodes::LSR,
    Opcodes::ADC,
    Opcodes::SBC,
    Opcodes::TEST,
    Opcodes::ASR,
    Opcodes::VADD,
    Opcodes::VSUB,
    Opcodes::VLSL,
    Opcodes::VLSR
];

pub static ALU_RI_LOOKUP: [Opcodes; 8] = [
    Opcodes::IADD,
    Opcodes::ISUB,
    Opcodes::IAND,
    Opcodes::IOR,
    Opcodes::IXOR,
    Opcodes::ICMP,
    Opcodes::ILSL,
    Opcodes::ILSR
];


pub static OPCODE_LOOKUP: [Opcodes; 32] = [
    Opcodes::CHGSTAT,
    Opcodes::ALURR,
    Opcodes::ALURI,
    Opcodes::ERROR,
    Opcodes::LOADBO,
    Opcodes::LOADPRE,
    Opcodes::LOADPOST,
    Opcodes::IN,
    Opcodes::STOREBO,
    Opcodes::STOREPRE,
    Opcodes::STOREPOST,
    Opcodes::OUT,
    Opcodes::MOVL,
    Opcodes::MOVH,
    Opcodes::MOV,
    Opcodes::INT,
    Opcodes::JMP,
    Opcodes::JMPR,
    Opcodes::CALL,
    Opcodes::CALLR,
    Opcodes::RET,
    Opcodes::JCC,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
    Opcodes::ERROR,
];
